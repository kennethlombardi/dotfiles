// Kenwashere
[
  // {
  //     "key": "ctrl+]",
  //     "command": "workbench.action.nextEditor"
  // },
  // {
  //     "key": "ctrl+[",
  //     "command": "workbench.action.previousEditor"
  // },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.nextEditor",
    "when": "!terminalFocus"
  },
  // {
  //   "key": "tab",
  //   "command": "workbench.action.nextEditor",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "workbench.action.previousEditor",
  //   "when": "!terminalFocus"
  // },
  {
    // bind copilot chat sidebar toggle
    "key": "shift+cmd+i",
    "command": "workbench.action.chat.open",
    "when": "hasChatProvider"
  },
  {
    "key": "cmd+shift+i",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "sideBarVisible && activeViewlet == 'github.copilot'"
  },
  {
    // unbind quickchat toggle
    "key": "shift+cmd+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "hasChatProvider"
  },
  {
    // unbind open native console
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.nothing"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.previousEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl-a z",
    "command": "workbench.action.maximizeEditor",
    "when": ""
  },
  {
    "key": "ctrl-a shift-z",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+cmd+h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+cmd+k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+a shift+\\",
    "command": "workbench.action.newGroupRight"
  },
  {
    "key": "ctrl+a -",
    "command": "workbench.action.newGroupBelow"
  },
  {
    "key": "ctrl+a shift+7",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+9",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.debug.action.goToNextBreakpoint",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "workbench.action.debug.callStackTop",
    "when": "debugState != 'inactive'"
  },
  // Possible New
  // End Possible New
  //
  // TBD
  // {
  //   "key": "shift+ctrl+e",
  //   "command": "actions.findWithSelection"
  // },
  // {
  //   "key": "ctrl+e",
  //   "command": "-actions.findWithSelection"
  // },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.action.marker.nextInFiles"
  },
  {
    "key": "ctrl+shift+cmd+9",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+cmd+0",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  }
  // {
  //   "key": "r",
  //   "command": "renameFile",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "enter",
  //   "command": "-renameFile",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "j",
  //   "command": "list.focusDown",
  //   "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "k",
  //   "command": "list.focusUp",
  //   "when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "selectNextSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+k",
  //   "command": "selectPrevSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "workbench.action.quickOpenNavigateNext",
  //   "when": "inQuickOpen"
  // },
  /// Tab
  // {
  //   "key": "tab",
  //   "command": "selectNextSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "tab",
  //   "command": "workbench.action.quickOpenNavigateNext",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "selectPrevSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "selectPrevSuggestion",
  //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "workbench.action.quickOpenNavigatePrevious",
  //   "when": "inQuickOpen"
  // }
  // {
  //   "key": "ctrl+k",
  //   "command": "workbench.action.quickOpenNavigatePrevious",
  //   "when": "inQuickOpen"
  // },
  // {
  //   "key": "enter",
  //   "command": "list.select",
  //   "when": "explorerViewletVisible && filesExplorerFocus"
  // },
  // {
  //   "key": "l",
  //   "command": "list.select",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  // },
  // {
  //   "key": "o",
  //   "command": "list.toggleExpand",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  // },
  // {
  //   "key": "h",
  //   "command": "list.collapse",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  // },
  // {
  //   "key": "a",
  //   "command": "explorer.newFile",
  //   "when": "filesExplorerFocus && !inputFocus"
  // },
  // {
  //   "key": "shift+a",
  //   "command": "explorer.newFolder",
  //   "when": "filesExplorerFocus && !inputFocus"
  // },
  // {
  //   "key": "shift+;",
  //   "command": "insertPrevSuggestion",
  //   "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  // },
  // {
  //   "key": "ctrl+l",
  //   "when": "sideBarFocus",
  //   "command": "workbench.action.focusActiveEditorGroup"
  // },
  // {
  //   "key": "ctrl+k",
  //   "command": "workbench.action.focusActiveEditorGroup",
  //   "when": "terminalFocus"
  // },
  // {
  //   "key": "ctrl+shift+t",
  //   "command": "workbench.action.terminal.focus",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "-editor.action.insertLineAfter",
  //   "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
  // },
  // {
  //   "key": "alt+j",
  //   "command": "workbench.action.terminal.focus",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "ctrl+shift+t",
  //   "command": "workbench.action.togglePanel"
  // },
  // {
  //   "key": "ctrl+j",
  //   "command": "-workbench.action.togglePanel"
  // },
  // {
  //   "key": "shift+k",
  //   "command": "editor.action.showHover",
  //   "when": "editorTextFocus"
  // },
  // {
  //   "key": "ctrl+k ctrl+i",
  //   "command": "-editor.action.showHover",
  //   "when": "editorTextFocus"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "-acceptAlternativeSelectedSuggestion",
  //   "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  // },
  // {
  //   "key": "ctrl+f",
  //   "command": "-vscode-neovim.ctrl-f",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  // }
]
